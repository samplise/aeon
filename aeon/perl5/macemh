#!/usr/bin/perl -w
# 
# macemh : part of the Mace toolkit for building distributed systems
# 
# Copyright (c) 2011, Charles Killian, Dejan Kostic, Ryan Braud, James W. Anderson, John Fisher-Ogden, Calvin Hubble, Duy Nguyen, Justin Burke, David Oppenheimer, Amin Vahdat, Adolfo Rodriguez, Sooraj Bhat
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above copyright
#      notice, this list of conditions and the following disclaimer in the
#      documentation and/or other materials provided with the distribution.
#    * Neither the names of the contributors, nor their associated universities 
#      or organizations may be used to endorse or promote products derived from
#      this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
# USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# 
# ----END-OF-LEGAL-STUFF----

use strict;

#use lib $ENV{HOME} . "/mace/perl5";

use Getopt::Long;
use Cwd 'abs_path', 'cwd';
use File::Basename;
use File::Spec;
use Carp;
use lib ((dirname($0) || "."), (dirname($0) || ".")."/../mace-extras/perl5");

use Mace::Util qw{:all};
use Mace::Compiler::MaceHeaderCompiler;
use Mace::Compiler::Globals;
use Mace::Compiler::MInclude;
use Mace::Compiler::ParseTreeObject::MethodTerm;

my @includes;
Getopt::Long::Configure("bundling");
GetOptions("I=s" => \@includes);

my ($inf, $outf) = @ARGV;

$outf = abs_path($outf);

unless (-e $inf) {
    die "usage: $0 input-file [output-file]\n";
}

$SIG{__DIE__} = sub{ confess $_[0]; };
$SIG{__WARN__} = sub{ confess $_[0]; die; };

# setting this causes header parser to break
push(@Mace::Compiler::Globals::INCLUDE_PATH, @includes, cwd(), dirname($0)."/../services/interfaces");
# $Mace::Compiler::Globals::filename = "";

open(IN, $inf) or die "cannot open $inf: $!\n";
my @in = <IN>;
close(IN);

my @linemap;
my @filemap;
my @offsetmap;

Mace::Compiler::MInclude::getLines($inf, \@in, \@linemap, \@filemap, \@offsetmap);

# for my $l (@linemap) {
#     print "line: $l\n";
# }

my $in = join("", @in);

my $parser = Mace::Compiler::MaceHeaderCompiler->new();
my $h = $parser->compileHeader(basename($inf, ".mh"), $in, \@linemap, \@filemap, \@offsetmap);
$h = indentStr($h);

if ($outf) {
    insertLine(\$h, $outf);
    open(OUT, ">$outf") or die "cannot open $outf: $!\n";
    print OUT $h;
    close(OUT);
}
else {
    print $h;
}

sub insertLine {
  my $file = shift;
  my $filename = shift;

  my @lines = split /\n/, $$file;
  my $nextlineno = 2;
  for my $l (@lines) {
    if($l =~ m|^\s*// __INSERT_LINE_HERE__\s*$|) {
      $l = qq{#line $nextlineno "$filename"};
    }
    $nextlineno++;
  }
  $$file = join("\n", @lines)."\n";
}


