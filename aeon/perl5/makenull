#!/usr/bin/env perl
# 
# makenull : part of the Mace toolkit for building distributed systems
# 
# Copyright (c) 2011, Charles Killian, Dejan Kostic, Ryan Braud, James W. Anderson, John Fisher-Ogden, Calvin Hubble, Duy Nguyen, Justin Burke, David Oppenheimer, Amin Vahdat, Adolfo Rodriguez, Sooraj Bhat
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
#    * Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#    * Redistributions in binary form must reproduce the above copyright
#      notice, this list of conditions and the following disclaimer in the
#      documentation and/or other materials provided with the distribution.
#    * Neither the names of the contributors, nor their associated universities 
#      or organizations may be used to endorse or promote products derived from
#      this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
# USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# 
# ----END-OF-LEGAL-STUFF----

use strict;

use File::Basename;
use lib ((dirname($0) || "."), (dirname($0) || ".")."/../mace-extras/perl5");
use Mace::Util qw(:all);

for my $el (@ARGV) {
    if ($el =~ m|.*\.h$|) {
	makeNullInstance($el);
    }
    else {
	die "unrecognized file type: $el\n";
    }
}

sub makeNullInstance {
    my $f = shift;
    my $service = substr($f, 0, -2);

    my $cf = "${service}.cc";
    my $svn = ${service};
    $svn =~ s/ServiceClass//;

    #if (-e $cf) {
    #    return;
    #}

    my $nsp = "${service}Namespace";

    my $date = localtime();
    my $b = qq{/*********************************************
 *  $cf
 *  Mace generated on:
 *  $date
 *********************************************/
};

    $b .= '#include ' . qq{"$f"} . "\n";
    $b .= qq(
namespace $nsp {
    $service null_;
}

$service& ${service}::NULL_ = ${nsp}::null_;
const char* ${service}::name = "$svn";

);

    open(OUT, ">$cf") or die "cannot open $cf: $!\n";
    print OUT $b;
    close(OUT);
} # makeNullInstance

