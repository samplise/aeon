# -*- cmake -*- vim:ft=cmake
FILE(GLOB CC_SRCS *.cc *.c)
FILE(GLOB VMACE *.vmac)
FILE(GLOB MACE *.mac *.m)
FILE(GLOB MH_SRCS *.mh)
FILE(GLOB MH_CC_SRCS *ServiceClass.mh *Handler.mh)
FILE(GLOB H_INT_SRCS *ServiceClass.h)
FILE(GLOB H_SVCS *-init.h)

EXECUTE_PROCESS(COMMAND ${PERL_EXECUTABLE} -I ${Mace_BINARY_DIR}/perl5 ${Mace_SOURCE_DIR}/perl5/mhdep.pl ${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_BINARY_DIR}
                WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
                OUTPUT_FILE ${CMAKE_CURRENT_BINARY_DIR}/mh.cmake)

INCLUDE(${CMAKE_CURRENT_BINARY_DIR}/mh.cmake)
INCLUDE(vars.cmake OPTIONAL)
INCLUDE(${Mace_BINARY_DIR}/perl5/PerlDeps.txt)
INCLUDE_DIRECTORIES(BEFORE ${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_BINARY_DIR})
INCLUDE_DIRECTORIES(${Mace_SOURCE_DIR}/lib)
INCLUDE_DIRECTORIES(${Mace_BINARY_DIR})
INCLUDE_DIRECTORIES(${Mace_SOURCE_DIR})

GET_DIRECTORY_PROPERTY(INC_D INCLUDE_DIRECTORIES)
FOREACH(DIR ${INC_D})
  SET(INC ${INC} "-I${DIR}")
ENDFOREACH(DIR)

FOREACH(HFILE ${H_INT_SRCS})
  GET_FILENAME_COMPONENT(MHNAME ${HFILE} NAME_WE)
  ADD_CUSTOM_TARGET(${MHNAME}_dep DEPENDS ${${MHNAME}_dep})
  ADD_DEPENDENCIES(${MHNAME}_dep parsers)
ENDFOREACH(HFILE ${H_INT_SRCS})

FOREACH(MHFILE ${MH_SRCS})
  IF(NOT EXISTS ${macemh})
    MESSAGE(FATAL_ERROR "Cannot find macemh compiler (supposedly at ${macemh})")
  ENDIF(NOT EXISTS ${macemh})

  GET_FILENAME_COMPONENT(MHNAME ${MHFILE} NAME_WE)
  SET_SOURCE_FILES_PROPERTIES(${CMAKE_CURRENT_BINARY_DIR}/${MHNAME}.h PROPERTIES GENERATED true)
  ADD_CUSTOM_COMMAND(OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/${MHNAME}.h
                     COMMAND ${PERL_EXECUTABLE} -I ${Mace_BINARY_DIR}/perl5 ${macemh} ${INC} ${MHFILE} ${MHNAME}.h
                     MAIN_DEPENDENCY ${MHFILE}
                     DEPENDS ${macemh_dep}
                     )
  ADD_CUSTOM_TARGET(${MHNAME}_dep ALL DEPENDS ${${MHNAME}_dep})
  ADD_DEPENDENCIES(${MHNAME}_dep parsers ${${MHNAME}_manual_dep})

  IF(NOT MHFILE MATCHES "ServiceClass" AND NOT MHFILE MATCHES "Handler")
    SET(ALL_TGT_DEP ${ALL_TGT_DEP} ${MHNAME}_dep)
  ENDIF(NOT MHFILE MATCHES "ServiceClass" AND NOT MHFILE MATCHES "Handler")
ENDFOREACH(MHFILE)

FOREACH(MHFILE ${MH_CC_SRCS})
  IF(NOT EXISTS ${makenull})
    MESSAGE(FATAL_ERROR "Cannot find makenull compiler (supposedly at ${makenull})")
  ENDIF(NOT EXISTS ${makenull})

  GET_FILENAME_COMPONENT(MHNAME ${MHFILE} NAME_WE)
  SET(GEN_CC_MH_SRCS ${GEN_CC_MH_SRCS} ${MHNAME}.cc)
  IF(EXISTS ${MHNAME}.h})
    SET(DEP ${MHNAME}.h)
  ELSE(EXISTS ${MHNAME}.h})
    SET(DEP ${CMAKE_CURRENT_BINARY_DIR}/${MHNAME}.h)
  ENDIF(EXISTS ${MHNAME}.h})
  ADD_CUSTOM_COMMAND(OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/${MHNAME}.cc
                     COMMAND ${PERL_EXECUTABLE} -I ${Mace_BINARY_DIR}/perl5 ${makenull} ${MHNAME}.h
                     MAIN_DEPENDENCY ${DEP}
                     DEPENDS ${makenull_dep}
                     )
ENDFOREACH(MHFILE)

FOREACH(MACFILE ${MACE})
  IF(NOT EXISTS ${macec})
    MESSAGE(FATAL_ERROR "Cannot find macec compiler (supposedly at ${macec})")
  ENDIF(NOT EXISTS ${macec})

  GET_FILENAME_COMPONENT(MACNAME ${MACFILE} NAME_WE)
  LIST(APPEND MACE_SRCS 
            ${CMAKE_CURRENT_BINARY_DIR}/${MACNAME}.cc 
            ${CMAKE_CURRENT_BINARY_DIR}/${MACNAME}-init.cc
      )
  SET(MACE_GEN 
            ${CMAKE_CURRENT_BINARY_DIR}/${MACNAME}.h 
            ${CMAKE_CURRENT_BINARY_DIR}/${MACNAME}.cc 
            ${CMAKE_CURRENT_BINARY_DIR}/${MACNAME}-macros.h 
            ${CMAKE_CURRENT_BINARY_DIR}/${MACNAME}-constants.h 
#            ${CMAKE_CURRENT_BINARY_DIR}/${MACNAME}-dummy-init.cc 
            ${CMAKE_CURRENT_BINARY_DIR}/${MACNAME}-init.h 
            ${CMAKE_CURRENT_BINARY_DIR}/${MACNAME}-init.cc
      )
  ADD_CUSTOM_COMMAND(OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/${MACNAME}.cc 
                            ${CMAKE_CURRENT_BINARY_DIR}/${MACNAME}.h 
                            ${CMAKE_CURRENT_BINARY_DIR}/${MACNAME}-init.h 
                            ${CMAKE_CURRENT_BINARY_DIR}/${MACNAME}-init.cc 
#                            ${CMAKE_CURRENT_BINARY_DIR}/${MACNAME}-dummy-init.cc 
                            ${CMAKE_CURRENT_BINARY_DIR}/${MACNAME}-constants.h 
                            ${CMAKE_CURRENT_BINARY_DIR}/${MACNAME}-macros.h
                     COMMAND ${PERL_EXECUTABLE} -I ${Mace_BINARY_DIR}/perl5 ${macec} ${INC} ${MACFILE}
                     MAIN_DEPENDENCY ${MACFILE}
                     DEPENDS ${${MACNAME}Service_dep} ${${MACNAME}Service_mi_dep} ${macec_dep}
                     )
  #ADD_CUSTOM_TARGET(${MACNAME}_gen DEPENDS ${MACE_GEN})
  #FOREACH(SVDEP ${${MACNAME}Service_sv_list})
  #  LIST(APPEND LIB_TGT_DEP ${SVDEP})
  #  #LIST(APPEND INIT_CC_FILE_DEP ${SVDEP}-init.h)
  #  #SET_SOURCE_FILES_PROPERTIES(${MACNAME}-init.cc PROPERTIES OBJECT_DEPENDS ${SVDEP}-init.h)
  #  #SET_SOURCE_FILES_PROPERTIES(${MACNAME}-init.cc PROPERTIES OBJECT_DEPENDS ${SVDEP}_gen)
  #ENDFOREACH(SVDEP ${${MACNAME}Service_sv_list})
  #IF(INIT_CC_FILE_DEP)
  #  MESSAGE("SET_SOURCE_FILES_PROPERTIES(${MACNAME}-init.cc PROPERTIES OBJECT_DEPENDS ${INIT_CC_FILE_DEP})")
  #ENDIF(INIT_CC_FILE_DEP)
  IF(${MACNAME}Service_tgt_dep)
    LIST(APPEND ALL_TGT_DEP ${${MACNAME}Service_tgt_dep})
  ENDIF(${MACNAME}Service_tgt_dep)
  IF(${MACNAME}Service_sv_list)
    LIST(APPEND ALL_LIB_DEP ${${MACNAME}Service_sv_list})
  ENDIF(${MACNAME}Service_sv_list)
ENDFOREACH(MACFILE)

FOREACH(VMACFILE ${VMACE})
  IF(NOT EXISTS ${mvariant})
    MESSAGE(FATAL_ERROR "Cannot find macec compiler (supposedly at ${mvariant})")
  ENDIF(NOT EXISTS ${mvariant})

  GET_FILENAME_COMPONENT(VMACNAME ${VMACFILE} NAME_WE)
  SET(VMACE_FILES )

  FOREACH(VARIANT ${${VMACNAME}_VARIANTS})
    LIST(APPEND MACE_SRCS 
              ${CMAKE_CURRENT_BINARY_DIR}/${VARIANT}.cc 
              ${CMAKE_CURRENT_BINARY_DIR}/${VARIANT}-init.cc
        )
    LIST(APPEND VMACE_FILES
              ${CMAKE_CURRENT_BINARY_DIR}/${VARIANT}.mac
        )
    LIST(APPEND VMACE_FILES_SHORT
              ${VARIANT}.mac
        )
  ENDFOREACH(VARIANT ${${VMACNAME}_VARIANTS})

  ADD_CUSTOM_COMMAND(OUTPUT ${VMACE_FILES}
                     COMMAND ${PERL_EXECUTABLE} -I ${Mace_BINARY_DIR}/perl5 ${mvariant} ${INC} ${VMACFILE}
                     MAIN_DEPENDENCY ${VMACFILE}
                     DEPENDS ${${VMACNAME}Service_mi_dep} ${mvariant_dep}
                    )
  #ADD_CUSTOM_TARGET(${VMACNAME}_variant_dep DEPENDS ${VMACE_FILES})

  FOREACH(VARIANT ${${VMACNAME}_VARIANTS})
    SET(${VARIANT}_gen ${CMAKE_CURRENT_BINARY_DIR}/${VARIANT}.cc 
                       ${CMAKE_CURRENT_BINARY_DIR}/${VARIANT}.h 
                       ${CMAKE_CURRENT_BINARY_DIR}/${VARIANT}-init.h 
                       ${CMAKE_CURRENT_BINARY_DIR}/${VARIANT}-init.cc 
#                       ${CMAKE_CURRENT_BINARY_DIR}/${VARIANT}-dummy-init.cc 
                       ${CMAKE_CURRENT_BINARY_DIR}/${VARIANT}-constants.h 
                       ${CMAKE_CURRENT_BINARY_DIR}/${VARIANT}-macros.h
        )

    ADD_CUSTOM_COMMAND(OUTPUT ${${VARIANT}_gen}
                       COMMAND ${PERL_EXECUTABLE} -I ${Mace_BINARY_DIR}/perl5 ${macec} ${INC} ${CMAKE_CURRENT_BINARY_DIR}/${VARIANT}.mac
                       MAIN_DEPENDENCY ${VMACE_FILES}
                       DEPENDS ${${VARIANT}Service_dep} ${macec_dep}
                       )

                       #MAIN_DEPENDENCY ${VMACNAME}_variant_dep
     #MESSAGE("ADD_CUSTOM_TARGET(${VARIANT}_gen DEPENDS ${${VARIANT}_gen})")
     #ADD_CUSTOM_TARGET(${VARIANT}_gen DEPENDS ${${VARIANT}_gen})

     #LIST(APPEND ALL_TGT_DEP ${VARIANT}_gen)
  ENDFOREACH(VARIANT ${VARIANTS})

  IF(${VMACNAME}Service_tgt_dep)
    LIST(APPEND ALL_TGT_DEP ${${VMACNAME}Service_tgt_dep})
  ENDIF(${VMACNAME}Service_tgt_dep)
  IF(${VMACNAME}Service_sv_list)
    LIST(APPEND ALL_LIB_DEP ${${VMACNAME}Service_sv_list})
  ENDIF(${VMACNAME}Service_sv_list)

ENDFOREACH(VMACFILE ${VMACE})

#FOREACH(H_SVC ${H_SVCS})
#  STRING(REPLACE "-init.h" ".h" H_FILE ${H_SVC})
#  GET_FILENAME_COMPONENT(SVCNAME ${H_FILE} NAME_WE)
#  ADD_CUSTOM_TARGET(${SVCNAME}_gen)
#  #MESSAGE("ADD_CUSTOM_TARGET(${SVCNAME}_gen)")
#ENDFOREACH(H_SVC ${H_SVCS})

IF(CC_SRCS OR GEN_CC_MH_SRCS OR MACE_SRCS)
  ADD_LIBRARY(${SERVICE_DIR} ${LIBTYPE} ${CC_SRCS} ${GEN_CC_MH_SRCS} ${MACE_SRCS})
  ADD_DEPENDENCIES(${SERVICE_DIR} parsers)

  IF(ALL_LIB_DEP)
    FOREACH(MACFILE ${MACE})
      GET_FILENAME_COMPONENT(MACNAME ${MACFILE} NAME_WE)
      LIST(REMOVE_ITEM ALL_LIB_DEP ${MACNAME})
    ENDFOREACH(MACFILE)
  ENDIF(ALL_LIB_DEP)

  #MESSAGE("SERVICE_DIR ${SERVICE_DIR} ALL_LIB_DEP ${ALL_LIB_DEP}")
  FOREACH(LNAME ${ALL_LIB_DEP})
    LIST(APPEND ALL_LIB_FILE_DEP ${${LNAME}Service_lib})
  ENDFOREACH(LNAME ${ALL_LIB_DEP})

  #MESSAGE("TARGET_LINK_LIBRARIES(${SERVICE_DIR} mace ${ALL_LIB_FILE_DEP} ${EXTRA_SVLIB_DEP})")
  TARGET_LINK_LIBRARIES(${SERVICE_DIR} mace ${ALL_LIB_FILE_DEP} ${EXTRA_SVLIB_DEP})
  IF(ALL_TGT_DEP OR ALL_LIB_FILE_DEP)
    ADD_DEPENDENCIES(${SERVICE_DIR} ${ALL_TGT_DEP} ${ALL_LIB_FILE_DEP})
  ENDIF(ALL_TGT_DEP OR ALL_LIB_FILE_DEP)
ENDIF(CC_SRCS OR GEN_CC_MH_SRCS OR MACE_SRCS)
